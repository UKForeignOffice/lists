{% from "cookie-banner/macro.njk" import govukCookieBanner %}

{% set cookieBannerHtml %}
  <p>We use some essential cookies to make this service work.</p>

  <p>Weâ€™d also like to use analytics cookies so we can understand how you use the service and make improvements.</p>
{% endset %}

{% set cookieBannerHeader %}
  Cookies on {{ SERVICE_NAME }}
{% endset %}

<div id="global-cookie-message" class="govuk-body govuk-!-margin-bottom-0">
  <form id="global-cookie-message-form" method="post" action="/help/cookies">
    <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
    <input name="referrer" type="hidden" value="{{ currentLocation }}" />

    {{ govukCookieBanner({
      ariaLabel: cookieBannerHeader,
      messages: [
        {
          headingText: cookieBannerHeader,
          html: cookieBannerHtml,
          actions: [
            {
              text: "Accept analytics cookies",
              type: "submit",
              name: "cookies",
              value: "accept"
            },
            {
              text: "Reject analytics cookies",
              type: "submit",
              name: "cookies",
              value: "reject"
            },
            {
              text: "View cookies",
              href: "/help/cookies"
            }
          ]
        }
      ]
    }) }}
  </form>
</div>

<script nonce="{{cspNonce}}">
  // IE11 polyfill
  if (!Object.fromEntries) {
    Object.fromEntries = function fromEntries(entries) {
      if (!entries) {
        throw new Error('Object.fromEntries() requires a single iterable argument');
      }

      var obj = {};

      for (var i = 0; i < entries.length; i++) {
        obj[entries[i][0]] = entries[i][1];
      }

      return obj;
    }
  }

  var banner = document.getElementById('global-cookie-message');
  var form = document.getElementById('global-cookie-message-form');
  var formData = new FormData(form);
  var buttons = form.querySelectorAll('button[name="cookies"]');

  // FormData doesn't pick up the value of buttons so you need to set this using a button click event
  buttons.forEach(function (button) {
    button.addEventListener('click', function () {
      formData.set(button.name, button.value);
    });
  });

  // Submit cookie preferences via AJAX if JS is enabled
  form.addEventListener('submit', function (e) {
    e.preventDefault();
    e.stopPropagation();

    var action = e.target.getAttribute('action');
    var body = Object.fromEntries(Array.from(formData));

    fetch(action, {
      method: "POST",
      credentials: 'same-origin',
      headers: {
        "Accept": "application/json",
        "Content-Type": "application/json"
      },
      body: JSON.stringify(body),
    }).then(() => {
      banner.style.display = 'none';
    });
  });
</script>
