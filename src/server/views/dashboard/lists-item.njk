{% extends "./dashboard.njk" %}
{% import "../lists/partials/covid-test-providers/macros.njk" as covidTestProvidersMacros %}
{% import "../lists/partials/lawyers/macros.njk" as lawyersMacros %}
{% import "./macros.njk" as dashboardMacros %}

{% block aside %}
  <a class="govuk-link govuk-back-link" href="{{ dashboardRoutes.listsItems.replace(':listId', list.id) }}">Back</a>
{% endblock %}

{% block dashboard %}
  {% if error and error.text %}
  {{ dashboardMacros.errorBanner(error) }}
  {% endif %}

  <h1 class="govuk-heading-l">
    Review {{ _.startCase(_.toLower(listItem.jsonData.contactName)) }}
  </h1>

  <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">

  {% if not listItem %}
    <p class="govuk-body">Details could not be found</p>
  {% else %}
    <form class="form" action="{{ dashboardRoutes.listsItem.replace(':listId', list.id).replace(':listItemId', listItem.id) }}" method="post" required>

    <input type="hidden" name="_csrf" id="_csrf" value="{{ csrfToken }}" />
      <ul class="govuk-list dashboard__content-list">
          <li id="item-{{ listItem.id }}">
            {% if list.type === 'covidTestProviders' %}
              {{ covidTestProvidersMacros.covidTestProvidersListItem(listItem, true) }}
              {{ dashboardMacros.listItemEditActionBar(list, listItem, dashboardRoutes, listItem.jsonData.organisationName, isPinned, actionButtons) }}
            {% endif %}
            {% if list.type === 'lawyers' %}
              {{ lawyersMacros.lawyersListManagementItem(listItem, isPinned, requestedChanges) }}
              {{ dashboardMacros.listItemEditActionBar(list, listItem, dashboardRoutes, listItem.jsonData.contactName, isPinned, actionButtons) }}
            {% endif %}
            <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
          </li>
      </ul>
    </form>

    <script nonce="{{cspNonce}}">

      const hiddenClass = "govuk-radios__conditional--hidden";
      document.querySelector("#conditional-action-requestChanges").classList.add(hiddenClass);
      const radios = document.querySelectorAll('input[type=radio][name="action"]');
      radios.forEach(radio => radio.addEventListener('change', () => {
        const isRequestingChanges = radio.value === "requestChanges" && radio.checked;
        const requestChangesTextarea = document.getElementById("conditional-action-requestChanges");

        if (isRequestingChanges) {
          requestChangesTextarea.classList.remove(hiddenClass);
        } else {
          requestChangesTextarea.classList.add(hiddenClass);
        }
      }));

    </script>
  {% endif %}
{% endblock %}
