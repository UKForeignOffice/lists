{% from "button/macro.njk" import govukButton %}
{% from "warning-text/macro.njk" import govukWarningText %}

{% macro navMenu(title, path, req) %}
  <li>
    <a class="govuk-link {{ "govuk-link--no-underline" if req.path !== path }}" href="{{ path }}">
      {{ title }}
    </a>
  </li>
{% endmacro %}

{% macro successBanner(title = "Saved successfully") %}
  <div class="govuk-notification-banner govuk-notification-banner--success" role="alert" aria-labelledby="govuk-notification-banner-title" data-module="govuk-notification-banner">
    <div class="govuk-notification-banner__header">
      <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
        Success
      </h2>
    </div>
    <div class="govuk-notification-banner__content">
      <h3 class="govuk-notification-banner__heading">
          {{ title }}
      </h3>
    </div>
  </div>
{% endmacro %}

{% macro errorBanner(error) %}
  <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="govuk-error-summary">
    <h2 class="govuk-error-summary__title" id="error-summary-title">
      There is a problem
    </h2>
    <div class="govuk-error-summary__body">
      <ul class="govuk-list govuk-error-summary__list">
        <li>
          <a href="{{error.href}}">{{error.text}}</a>
        </li>
      </ul>
    </div>
  </div>
{% endmacro %}

{% macro listItemActionsBart(list, listItem, dashboardRoutes, canApprove, canPublish) %}
  <div class="dashboard__list-item-actions-bar govuk-!-margin-top-2">
    <div class="govuk-form-group govuk-!-margin-bottom-0">
      <div class="dashboard__item-options">
        <div class="dashboard__item-publish">
          {% if (listItem.lat == 0) and (listItem.long == 0) %}
            {{ govukWarningText({
              classes: "govuk-!-margin-bottom-2",
              iconFallbackText: "Warning",
              text: "We were unable to locate the address"
            }) }}
          {% else %}
            <fieldset class="govuk-fieldset">
              <div class="govuk-checkboxes govuk-checkboxes--small">
                <div class="govuk-checkboxes__item">
                  <input
                    class="govuk-checkboxes__input dashboard__list-item-actions-bar__toggler"
                    id="approve-{{listItem.id}}"
                    name="approve"
                    type="checkbox"
                    value="approve"
                    data-title="{{ _.startCase(listItem.jsonData.organisationName) }}"
                    data-id="{{listItem.id}}"
                    {{-" checked" if listItem.isApproved }}
                    {{-" disabled" if not canApprove }}
                  >
                  <label class="govuk-label govuk-checkboxes__label" for="approve-{{listItem.id}}">
                    Confirm
                    <span class="govuk-visually-hidden">
                      that {{ _.startCase(listItem.jsonData.organisationName) }}
                    </span> details have been checked
                  </label>
                </div>
                  <div class="govuk-checkboxes__item">
                    <input
                      class="govuk-checkboxes__input"
                      id="publish-{{ listItem.id }}"
                      name="publish"
                      type="checkbox"
                      value="publish"
                      data-title="{{ _.startCase(listItem.jsonData.organisationName) }}"
                      data-id="{{ listItem.id }}"
                      aria-describedby="publish-{{ listItem.id }}-hint"
                      {{-" checked" if listItem.isPublished }}
                      {{-" disabled" if not canPublish or not listItem.isApproved }}
                    >
                    <label class="govuk-label govuk-checkboxes__label" for="publish-{{listItem.id}}">
                      Publish <span aria-hidden="true">these</span> <span class="govuk-visually-hidden">{{ _.startCase(listItem.jsonData.organisationName) }}</span> details
                    </label>
                  </div>
              </div>
            </fieldset>
          {% endif %}
        </div>

        <div class="dashboard__item-delete">
          {{ govukButton({
            text: "Delete application",
            classes: "govuk-button--warning govuk-!-margin-bottom-2",
            attributes: {
              id: ["delete-", listItem.id] | join,
              "data-title": _.startCase(listItem.jsonData.organisationName),
              "data-id": listItem.id
            }
          }) }}
        </div>
      </div>
    </div>
  </div>
  <script nonce="{{cspNonce}}">
    document.getElementById("approve-{{listItem.id}}").onclick = function toggleListItemApproveStatus(event) {
      event.preventDefault();
      event.stopPropagation();

      const isConfirming = event.target.checked;
      const id = event.target.getAttribute("data-id");
      const title = event.target.getAttribute("data-title");
      const publishCheckbox = document.getElementById("publish-{{listItem.id}}");

      const action = isConfirming ? "confirm" : "unconfirm";
      let confirmMessage = 'Do you really want to ' + action + ' "' + title + '"?';

      if (isConfirming) {
        confirmMessage += '\n\nBy ticking "Details have been checked" you confirm that the provider’s details meet the requirements to be added to the list.'
      }

      if (confirm(confirmMessage)) {
        fetch("{{ dashboardRoutes.listsItemsApprove.replace(':listId', list.id).replace(':listItemId', listItem.id) }}", {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ isApproved: isConfirming })
        }).then(function (response) {
          return response.json();
        }).then(function (result) {
          if (result.error !== undefined) {
            alert("Something went wrong, Error: " + error.message);
          } else {
            event.target.checked = result.isApproved;

            if (result.isApproved) {
              if(`{{canPublish}}` === 'true') {
                publishCheckbox.disabled = false;
              }
            } else {
              publishCheckbox.checked = false;
              publishCheckbox.disabled = true;
            }

            setTimeout(function () {
              if (isConfirming) {
                alert("You have successfully confirmed " + title + "’s details meet the requirements to be added to the list.");
              } else {
                alert(title + " details have been unconfirmed");
              }
            });
          }
        })
        .catch(function () {
          alert("Something went wrong, please try again");
        });
      }
    }

    document.getElementById("publish-{{listItem.id}}").onclick = function toggleListItemPublishStatus(event) {
      event.preventDefault();
      event.stopPropagation();

      const title = event.target.getAttribute("data-title");
      const id = event.target.getAttribute("data-id");
      const isPublishing = event.target.checked;
      const action = event.target.checked ? "publish" : "unpublish";
      let confirmMessage = 'Do you really want to ' + action + ' "' + title + '"?'

      if (isPublishing) {
        confirmMessage += "\n\nThis will automatically upload the provider’s details on GOV.UK. You can unpublish or remove the provider details by unticking the 'Publish these details' checkbox"
      } else {
        confirmMessage  += "\n\nThis will automatically remove the provider’s details from GOV.UK. You can republish the provider details by reticking the 'Publish these details' checkbox"
      }

      if (confirm(confirmMessage)) {
        fetch("{{ dashboardRoutes.listsItemsPublish.replace(':listId', list.id).replace(':listItemId', listItem.id) }}", {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ isPublished: isPublishing })
        }).then(function (response) {
          return response.json();
        }).then(function (result) {
          if (result.error !== undefined) {
            alert(result.error.message);
          } else {
            event.target.checked = result.isPublished;
          }

          setTimeout(function () {
            if(isPublishing) {
              alert(title + " has been successfully published on GOV.UK Find a Professional Service Abroad");
            } else {
              alert(title + " has been successfully removed from GOV.UK Find a Professional Service Abroad");
            }
          });
        })
        .catch(function () {
          alert("Something went wrong, please try again");
        });
      }
    }

    document.getElementById("delete-{{ listItem.id }}").onclick = function deleteListItem(event) {
      event.preventDefault();
      event.stopPropagation();

      const title = event.target.getAttribute("data-title");
      const id = event.target.getAttribute("data-id");
      const message = `Are you sure you want to delete "${title}"? This will permanently delete this item from the list`;

      if (confirm(message)) {
        fetch("{{ dashboardRoutes.listsItemsDelete.replace(':listId', list.id).replace(':listItemId', listItem.id) }}", {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' },
        }).then(function (response) {
          return response.json();
        }).then(function (result) {
          if (result.error !== undefined) {
            alert(result.error.message);
          } else {
              document.getElementById("item-{{ listItem.id }}").remove();
          }

          setTimeout(function () {
            alert(`"${title}" has been deleted.`);
          });
        })
        .catch(function () {
          alert("Something went wrong, please try again");
        });
      }
    }
  </script>
{% endmacro %}
