generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native"]
  previewFeatures = ["filterJson"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model List {
  id                  Int      @id @default(autoincrement())
  reference           String   @default(uuid()) @unique
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  type                String
  country             Country  @relation(fields: [countryId], references: [id])
  countryId   Int

  jsonData            Json

  @@index([type, countryId])
}

model ListItem {
  id                  Int      @id @default(autoincrement())
  reference           String   @default(uuid()) @unique
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  type                String
  jsonData            Json

  address             Address @relation(fields: [addressId], references: [id])
  addressId           Int

  isApproved          Boolean @default(false)
  isPublished         Boolean @default(false)
  isBlocked           Boolean @default(false)

  @@index([type, reference, isApproved, isPublished, isBlocked])
}

model Address {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  firstLine    String   @db.VarChar(255)
  secondLine  String?  @db.VarChar(255)
  city        String?  @db.VarChar(255)
  postCode    String   @db.VarChar(255)
  country     Country  @relation(fields: [countryId], references: [id])
  countryId   Int

  ListItem    ListItem[]

  geoLocation    GeoLocation?  @relation(fields: [geoLocationId], references: [id])
  geoLocationId   Int?
}

model GeoLocation {
  id          Int @id @default(autoincrement())
  location    Unsupported("geography(POINT)")
  address     Address[]

  @@index([location])
}

model Country {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  name      String    @db.VarChar(255) @unique
  address   Address[]
  list      List[]
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  email     String    @unique
  jsonData  Json
}

model Audit {
  id                  Int      @id @default(autoincrement())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  type                String?
  jsonData            Json

  @@index([type])
  @@index([jsonData])
}

model Feedback {
  id                  Int      @id @default(autoincrement())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  type                String
  jsonData            Json

  @@index([type])
}
